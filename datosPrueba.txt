Primero, importamos los modelos y luego generamos los datos para los tres modelos.

1. Crear los restaurantes

from restaurants.models import Restaurant

# Crear algunos restaurantes de prueba
restaurant1 = Restaurant.objects.create(
    name="Restaurant A",
    address="Address A, City",
    rating=4.5,
    status="Active",
    category="Italian",
    latitude=40.712776,
    longitude=-74.005974,
    activate=True
)

restaurant2 = Restaurant.objects.create(
    name="Restaurant B",
    address="Address B, City",
    rating=4.0,
    status="Active",
    category="Mexican",
    latitude=34.052235,
    longitude=-118.243683,
    activate=True
)

restaurant3 = Restaurant.objects.create(
    name="Restaurant C",
    address="Address C, City",
    rating=3.8,
    status="Inactive",
    category="Chinese",
    latitude=41.878113,
    longitude=-87.629799,
    activate=False
)

restaurant4 = Restaurant.objects.create(
    name="Restaurant D",
    address="Address D, City",
    rating=4.2,
    status="Active",
    category="Indian",
    latitude=51.507351,
    longitude=-0.127758,
    activate=True
)

restaurant5 = Restaurant.objects.create(
    name="Restaurant E",
    address="Address E, City",
    rating=3.9,
    status="Active",
    category="American",
    latitude=48.856613,
    longitude=2.352222,
    activate=True
)
2. Crear los usuarios
Ahora creamos 10 usuarios de prueba, asignándoles uno de los restaurantes creados anteriormente y alternando entre los tipos de usuarios (dealer y customer).

from users.models import User

# Crear 10 usuarios de prueba
users = []
for i in range(1, 11):
    user = User.objects.create(
        first_name=f'FirstName{i}',
        last_name=f'LastName{i}',
        email=f'user{i}@example.com',
        phone=f'123-456-789{i}',
        default_address=f'Address {i}, City',
        restaurant=restaurant1 if i % 2 == 0 else restaurant2,  # Alternamos entre dos restaurantes
        typology='dealer' if i % 2 == 0 else 'customer',  # Alternamos entre "dealer" y "customer"
        active=True
    )
    users.append(user)

# Verificar que los usuarios se crearon correctamente
for user in users:
    print(user.first_name, user.email)
3. Crear los MenuItem (si no están creados)
Antes de crear las órdenes, necesitas tener algunos MenuItem disponibles. Si no tienes aún el modelo MenuItem, crea algunos datos de prueba.

from menu.models import MenuItem

# Crear algunos elementos de menú de prueba
item1 = MenuItem.objects.create(name="Pizza", price=12.99)
item2 = MenuItem.objects.create(name="Tacos", price=8.99)
item3 = MenuItem.objects.create(name="Burger", price=10.99)
item4 = MenuItem.objects.create(name="Sushi", price=15.99)
item5 = MenuItem.objects.create(name="Pasta", price=11.99)
4. Crear las órdenes
Finalmente, generamos algunas órdenes para los usuarios. Cada usuario puede hacer una orden y seleccionar entre varios elementos del menú. Las órdenes también se asignan a uno de los restaurantes creados anteriormente.

from orders.models import Order
from datetime import datetime, timedelta

# Crear algunas órdenes de prueba
orders = []
for i, user in enumerate(users[:5]):  # Solo tomamos los primeros 5 usuarios para crear órdenes
    order = Order.objects.create(
        customer=user,
        restaurant=restaurant1 if i % 2 == 0 else restaurant2,  # Alternamos entre dos restaurantes
        total_amount=35.00,
        delivery_address=f"Delivery Address {i+1}, City",
        special_instructions="No onions" if i % 2 == 0 else "Extra spicy",
        status="Pending",
        estimated_delivery_time=datetime.now() + timedelta(hours=1)
    )
    order.items.set([item1, item2])  # Asignamos los elementos del menú (Pizza y Tacos)
    orders.append(order)

# Verificar que las órdenes se crearon correctamente
for order in orders:
    print(order.id, order.customer.first_name, order.restaurant.name)